#<center>父亲节活动总结</center>
---
### 闯关部分
1. 初始化活动状态
可以把目前每次都从数据库中读取数据改为从缓存中读取数据
2. 用户参与活动信息查询
- 插入了一部分机器人数据
- 用户闯关获取到的奖品查询
- 用户金币、理财金、京东卡以及每个关卡的闯关统计
3. 闯关
- 参数校验
- 活动校验
- 校验用户是否存在、金币是否充足
- 事务：准备数据，修改数据库内容

---
###微信分享
1. 领取校验
- 校验请求参数
- 活动校验
- 查询领取记录，有记录则返回
- 根据`unionId`查询`mobile`
2. 拆红包
- 参数校验
- 活动校验
- 判断`mobile`、`unionId`是否领取过，领取过则返回
- 对该用户加锁
- 如果是领取理财金的时段则先判断有剩余理财金可以领取，然后再锁住理财金总账户，再次判断是否有剩余，再决定派发理财金还是红包。
3. 朋友收起列表

---
###MQ消息消费
之前没有对活动状态进行校验；所有的MQ消息消费都需要放在同一个类中处理。

1. 投资消息消费
- 初始化用户金币总账户
>* 如果用户已经存在金币总账户则返回总账户记录
>* 没有则插入，重复插入则打出`warn`日志并查询出用户金币总账户并返回
- 获取用户金币总账户
- 根据investId查询金币流水记录，如果存在则返回（投资MQ消息重复消费）
- 插入金币流水记录
- 更新金币总账户
2. 注册消息消费
- 参数校验
- 领取记录查询，没有则返回
- 查询领取的红包或理财金超过派发时间或者状态不是派发中则返回
- 理财金或者红包派发
- 如果用户注册的时候已经写了推荐人则返回
- 获取用户微信领取时建立的推荐关系
- 校验推荐人信息
- 修改用户的推荐人

---
###定时任务
1. 统计京东卡数量，并在低于警戒线时给运营发送短信
2. 插入用户金币总账户
3. 更新理财金总账户
- 获取父亲节活动理财金总账户
- 锁住理财金总账户
- 更新理财金总账户并插入理财金更新流水

---
###Tips
1. `Map.Entry`使用
`Map.Entry`是`Map`的内部接口，`Map.entrySet()`方法返回`Map.Entry`实例化后的对象集，`Map.Entry`有`getKey()`方法，`getValue()`方法，`setValue()`方法。`Map`还有`Map.keySet()`方法，返回`Map`中`key`的集合。
2. 用户金币总账户并发控制
- 扣除用户金币之前先查询用户金币总账户
- 根据上面查询出的账户`id`，对这条记录使用`select for update`进行行锁
- 事务结束之后解锁
3. 分配京东卡并发控制
- 首先根据面值和未分配状态查询出满足条件的一张京东卡，没找到则抛出异常
- 立马把这张京东卡的状态改为已分配状态，更新失败则抛出异常
- 返回获取到的京东卡信息
4. `SELECT LAST_INSERT_ID()`
- `SELECT LAST_INSERT_ID()`返回最近一次插入的自增主键，必须是数据库实现自增的主键

---
###疑惑
1. `int receiveId = breakthroughDao.getLastInsertId();`获取最后一次插入的id，但并不一定是相应用户的`receivce_id`。
